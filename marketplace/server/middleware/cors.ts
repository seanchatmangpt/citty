// CORS middleware for Nuxt API routes\nexport default defineEventHandler(async (event) => {\n  const config = useRuntimeConfig()\n  \n  // Configure allowed origins\n  const allowedOrigins = [\n    'http://localhost:3000',\n    'http://localhost:3001', \n    'https://marketplace.citty.pro',\n    config.public.appUrl || 'http://localhost:3000'\n  ]\n  \n  const origin = getHeader(event, 'origin')\n  \n  // Set CORS headers\n  if (origin && allowedOrigins.includes(origin)) {\n    setResponseHeader(event, 'Access-Control-Allow-Origin', origin)\n  } else if (!origin) {\n    // Allow requests without origin (like mobile apps, Postman, etc.)\n    setResponseHeader(event, 'Access-Control-Allow-Origin', '*')\n  }\n  \n  setResponseHeaders(event, {\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',\n    'Access-Control-Allow-Headers': [\n      'Content-Type',\n      'Authorization',\n      'X-Requested-With',\n      'Accept',\n      'Origin',\n      'User-Agent',\n      'DNT',\n      'Cache-Control',\n      'X-Mx-ReqToken',\n      'Keep-Alive',\n      'X-Requested-With',\n      'If-Modified-Since'\n    ].join(', '),\n    'Access-Control-Allow-Credentials': 'true',\n    'Access-Control-Max-Age': '86400' // 24 hours\n  })\n  \n  // Handle preflight requests\n  if (event.node.req.method === 'OPTIONS') {\n    setResponseStatus(event, 204)\n    return 'OK'\n  }\n})"