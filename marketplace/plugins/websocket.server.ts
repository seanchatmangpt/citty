import { initializeWebSocket } from '~/server/api/websocket'\nimport { createServer } from 'http'\n\n// Server-side WebSocket initialization for Nuxt\nexport default defineNitroPlugin(async (nitroApp) => {\n  // Initialize WebSocket server when Nitro starts\n  nitroApp.hooks.hook('listen', (server) => {\n    console.log('ðŸš€ Initializing WebSocket server for Nuxt...')\n    \n    // Get the HTTP server instance\n    const httpServer = server as any\n    \n    // Initialize WebSocket server\n    const io = initializeWebSocket(httpServer)\n    \n    console.log('âœ… WebSocket server initialized with Nuxt integration')\n    console.log('ðŸ“¡ Available namespaces: /marketplace, /auctions, /notifications')\n    \n    // Store WebSocket server in Nitro context for use in API routes\n    nitroApp.hooks.hook('request', (event) => {\n      event.context.websocket = io\n    })\n    \n    // Health check endpoint for WebSocket\n    nitroApp.hooks.hook('render:route', (url, result, context) => {\n      if (url === '/api/websocket/health') {\n        const stats = {\n          status: 'healthy',\n          connectedClients: io.engine.clientsCount,\n          namespaces: Object.keys(io._nsps),\n          timestamp: new Date().toISOString()\n        }\n        \n        context.event.node.res.setHeader('Content-Type', 'application/json')\n        context.event.node.res.end(JSON.stringify(stats))\n      }\n    })\n  })\n  \n  console.log('ðŸ“¡ WebSocket plugin loaded for Nuxt server')\n})"